Software Development Plan


General

- Subversion Repository is on xp-dev.com
    http://svn.xp-dev.com/svn/antonvw-wxprojects/
    https://svn.xp-dev.com/svn/antonvw-wxprojects/

- Subversion access
    under windows TortoiseSVN is used (TortoiseSVN 1.6.4)
      http://tortoisesvn.tigris.org/,
    under Linux just the svn client (svn, version 1.5.4 (r33841))

- STL is used wherever possible

- GUI development library wxWidgets (2.9.0 branch)
    http://www.wxwidgets.org/

- database is OTL (Version 4.0.199)
    http://otl.sourceforge.net/

- icons and bitmaps
    menu and toolbar bitmaps are from wxWidgets, using wxArtProvider, or gtk stock items
    application icons are from
    http://www.famfamfam.com/lab/icons/silk/
    and converted to ico using
    http://www.convertico.com/
    and converted to xpm using GIMP (2.6.6)    
    http://www.gimp.org/

- API documentation is generated from the sources using Doxygen (1.6.0)
    http://www.stack.nl/~dimitri/doxygen/

- Other docs are in html format using no special html editor

- Automated testing is done using cppunit
    http://sourceforge.net/projects/cppunit
    
- Test coverage is not yet done, it might be done using gcov
    http://gcc.gnu.org/onlinedocs/gcc/Gcov.html

- Translation is done using poedit (1.4.2)
    http://www.poedit.net/
    
- The SVN support in wxExSVN works with SVN client 1.6.2 
    (e.g. from http://www.sliksvn.com/en/download)

- Build process/IDE
  - Project and make files are generated using Bakefile 0.2.6
    http://www.bakefile.org/
    this is done in the build dir, directly under trunk:
    
  - under windows using Microsoft Visual Studio C++ (Version 7.1.3088) and files generated
    using format msvs2003prj
    
  - under windows using Microsoft Visual Studio 2008
    Version 9.0.30729.1 SP
    Microsoft .NET Framework files generated 
    using format msvs2008prj
    
  - under linux gcc (Ubuntu 4.3.3-5ubuntu4) 4.3.3 and no IDE
    GNUMakefile generated using format gnu


SVN hierarchy

- development is in svn trunk

- tags are in svn tags

- stable releases are in svn branches

- documentation contains all general docs (this document)



When adding functionality in trunk

- document it in the source in doxy way

- if it needs to be translated, add _() around text strings, and update po file(s)

- add a test for it in 
    extension/test/base, 
    extension/test/app,
    extension/test/report,

  where it has least dependancies

  run test.all from the build dir, which collects output in test.log, and commits automatically.

- add a sample for it in
    extension/sample, 
    extension/sample/report


Roadmap

- Add ctags (like Exuberant CTAGS)

- Add gdb front-end

- Use Boost
